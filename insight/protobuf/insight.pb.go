// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.14.0
// source: insight.proto

package protobuf

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request       string `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	ClusterName   string `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Namespace     string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ContainerName string `protobuf:"bytes,4,opt,name=containerName,proto3" json:"containerName,omitempty"`
	Labels        string `protobuf:"bytes,5,opt,name=labels,proto3" json:"labels,omitempty"`
	FromSource    string `protobuf:"bytes,6,opt,name=fromSource,proto3" json:"fromSource,omitempty"`
	Duration      string `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_insight_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_insight_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_insight_proto_rawDescGZIP(), []int{0}
}

func (x *Data) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *Data) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Data) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Data) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *Data) GetLabels() string {
	if x != nil {
		return x.Labels
	}
	return ""
}

func (x *Data) GetFromSource() string {
	if x != nil {
		return x.FromSource
	}
	return ""
}

func (x *Data) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

type SysObsResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName   string                `protobuf:"bytes,1,opt,name=ClusterName,proto3" json:"ClusterName,omitempty"`
	NameSpace     string                `protobuf:"bytes,2,opt,name=NameSpace,proto3" json:"NameSpace,omitempty"`
	Labels        string                `protobuf:"bytes,3,opt,name=Labels,proto3" json:"Labels,omitempty"`
	ContainerName string                `protobuf:"bytes,4,opt,name=ContainerName,proto3" json:"ContainerName,omitempty"`
	Resources     []*SysProcessFileData `protobuf:"bytes,5,rep,name=Resources,proto3" json:"Resources,omitempty"`
}

func (x *SysObsResponseData) Reset() {
	*x = SysObsResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_insight_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysObsResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysObsResponseData) ProtoMessage() {}

func (x *SysObsResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_insight_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysObsResponseData.ProtoReflect.Descriptor instead.
func (*SysObsResponseData) Descriptor() ([]byte, []int) {
	return file_insight_proto_rawDescGZIP(), []int{1}
}

func (x *SysObsResponseData) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *SysObsResponseData) GetNameSpace() string {
	if x != nil {
		return x.NameSpace
	}
	return ""
}

func (x *SysObsResponseData) GetLabels() string {
	if x != nil {
		return x.Labels
	}
	return ""
}

func (x *SysObsResponseData) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *SysObsResponseData) GetResources() []*SysProcessFileData {
	if x != nil {
		return x.Resources
	}
	return nil
}

type SysProcessFileData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromSource   string   `protobuf:"bytes,1,opt,name=fromSource,proto3" json:"fromSource,omitempty"`
	ProcessPaths []string `protobuf:"bytes,2,rep,name=processPaths,proto3" json:"processPaths,omitempty"`
	FilePaths    []string `protobuf:"bytes,3,rep,name=filePaths,proto3" json:"filePaths,omitempty"`
	NetworkPaths []string `protobuf:"bytes,4,rep,name=networkPaths,proto3" json:"networkPaths,omitempty"`
}

func (x *SysProcessFileData) Reset() {
	*x = SysProcessFileData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_insight_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysProcessFileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysProcessFileData) ProtoMessage() {}

func (x *SysProcessFileData) ProtoReflect() protoreflect.Message {
	mi := &file_insight_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysProcessFileData.ProtoReflect.Descriptor instead.
func (*SysProcessFileData) Descriptor() ([]byte, []int) {
	return file_insight_proto_rawDescGZIP(), []int{2}
}

func (x *SysProcessFileData) GetFromSource() string {
	if x != nil {
		return x.FromSource
	}
	return ""
}

func (x *SysProcessFileData) GetProcessPaths() []string {
	if x != nil {
		return x.ProcessPaths
	}
	return nil
}

func (x *SysProcessFileData) GetFilePaths() []string {
	if x != nil {
		return x.FilePaths
	}
	return nil
}

func (x *SysProcessFileData) GetNetworkPaths() []string {
	if x != nil {
		return x.NetworkPaths
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SysObsResponseData `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_insight_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_insight_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_insight_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetData() []*SysObsResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_insight_proto protoreflect.FileDescriptor

var file_insight_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcd, 0x01, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x4f, 0x62, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x22, 0x3b, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x4f, 0x62, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x32,
	0x49, 0x0a, 0x0d, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x38, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0d, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x11, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x72, 0x6d,
	0x6f, 0x72, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_insight_proto_rawDescOnce sync.Once
	file_insight_proto_rawDescData = file_insight_proto_rawDesc
)

func file_insight_proto_rawDescGZIP() []byte {
	file_insight_proto_rawDescOnce.Do(func() {
		file_insight_proto_rawDescData = protoimpl.X.CompressGZIP(file_insight_proto_rawDescData)
	})
	return file_insight_proto_rawDescData
}

var file_insight_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_insight_proto_goTypes = []interface{}{
	(*Data)(nil),               // 0: insight.Data
	(*SysObsResponseData)(nil), // 1: insight.SysObsResponseData
	(*SysProcessFileData)(nil), // 2: insight.SysProcessFileData
	(*Response)(nil),           // 3: insight.Response
}
var file_insight_proto_depIdxs = []int32{
	2, // 0: insight.SysObsResponseData.Resources:type_name -> insight.SysProcessFileData
	1, // 1: insight.Response.Data:type_name -> insight.SysObsResponseData
	0, // 2: insight.Observability.SysObservabilityData:input_type -> insight.Data
	3, // 3: insight.Observability.SysObservabilityData:output_type -> insight.Response
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_insight_proto_init() }
func file_insight_proto_init() {
	if File_insight_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_insight_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_insight_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysObsResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_insight_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysProcessFileData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_insight_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_insight_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_insight_proto_goTypes,
		DependencyIndexes: file_insight_proto_depIdxs,
		MessageInfos:      file_insight_proto_msgTypes,
	}.Build()
	File_insight_proto = out.File
	file_insight_proto_rawDesc = nil
	file_insight_proto_goTypes = nil
	file_insight_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ObservabilityClient is the client API for Observability service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ObservabilityClient interface {
	SysObservabilityData(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Response, error)
}

type observabilityClient struct {
	cc grpc.ClientConnInterface
}

func NewObservabilityClient(cc grpc.ClientConnInterface) ObservabilityClient {
	return &observabilityClient{cc}
}

func (c *observabilityClient) SysObservabilityData(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/v1.observability.Observability/SysObservabilityData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ObservabilityServer is the server API for Observability service.
type ObservabilityServer interface {
	SysObservabilityData(context.Context, *Data) (*Response, error)
}

// UnimplementedObservabilityServer can be embedded to have forward compatible implementations.
type UnimplementedObservabilityServer struct {
}

func (*UnimplementedObservabilityServer) SysObservabilityData(context.Context, *Data) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysObservabilityData not implemented")
}

func RegisterObservabilityServer(s *grpc.Server, srv ObservabilityServer) {
	s.RegisterService(&_Observability_serviceDesc, srv)
}

func _Observability_SysObservabilityData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ObservabilityServer).SysObservabilityData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/insight.Observability/SysObservabilityData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ObservabilityServer).SysObservabilityData(ctx, req.(*Data))
	}
	return interceptor(ctx, in, info, handler)
}

var _Observability_serviceDesc = grpc.ServiceDesc{
	ServiceName: "insight.Observability",
	HandlerType: (*ObservabilityServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SysObservabilityData",
			Handler:    _Observability_SysObservabilityData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "insight.proto",
}
